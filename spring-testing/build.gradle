plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

//  DONE 01: Add the Spring Test framework dependency.
//  Make sure it is only used during testing.
//  Save your work.  You may need to restart your IDE to pick up the changes.

dependencies {
    // Spring Dependencies 
    implementation "org.springframework:spring-core:6.2.8"  
    implementation 'org.springframework:spring-context:6.2.8'
    
    // Spring Test
    testImplementation 'org.springframework:spring-test:6.2.8'
    
    // AssertJ for testing  
    testImplementation "org.assertj:assertj-core:3.11.1"    
        
    // JUnit Jupiter API for writing tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.0' 

    // Mockito
    testImplementation "org.mockito:mockito-core:5.7.0"
    testImplementation "org.mockito:mockito-junit-jupiter:5.7.0"   
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}